{"version":3,"sources":["components/Typography.js","components/Page.js","utils/Pagination.js","components/views/FavoritePage.js","utils/paginate.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","C_Users_note_Documents_GitHub_TravleingWithCorona_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","C_Users_note_Documents_GitHub_TravleingWithCorona_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","C_Users_note_Documents_GitHub_TravleingWithCorona_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","_","range","react_default","style","padding","page","cursor","onClick","FavoritePage","userId","localStorage","getItem","_useState","useState","_useState2","slicedToArray","Favorites","setFavorites","_useState3","_useState4","Count","setCount","_useState5","_useState6","CP","setCP","useEffect","window","scrollTo","getFavored","Axios","post","userFrom","then","res","data","success","favorites","alert","pagedFavorites","items","pageNumber","startIndex","slice","take","value","paginate","Row","Col","Card","CardHeader","CardBody","Table","hover","scope","nationKrNm","nationEnNm","nationIso2","Link","to","pathname","concat","utils_Pagination","objectSpread"],"mappings":"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","file":"static/js/10.7027d0aa.chunk.js","sourcesContent":["import classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nconst tagMap = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n  'display-1': 'h1',\r\n  'display-2': 'h1',\r\n  'display-3': 'h1',\r\n  'display-4': 'h1',\r\n  p: 'p',\r\n  lead: 'p',\r\n  blockquote: 'blockquote',\r\n};\r\n\r\nconst types = Object.keys(tagMap);\r\n\r\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\r\n  const classes = classNames({ [type]: !!type }, className);\r\n  let TypoComp;\r\n\r\n  if (Tag) {\r\n    TypoComp = Tag;\r\n  } else if (!Tag && tagMap[type]) {\r\n    TypoComp = tagMap[type];\r\n  } else {\r\n    TypoComp = 'p';\r\n  }\r\n\r\n  return <TypoComp {...restProps} className={classes} />;\r\n};\r\n\r\nTypography.propTypes = {\r\n  tag: PropTypes.component,\r\n  className: PropTypes.string,\r\n  type: PropTypes.oneOf(types),\r\n};\r\n\r\nTypography.defaultProps = {\r\n  type: 'p',\r\n};\r\n\r\nexport default Typography;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nimport Typography from './Typography';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-3', className);\r\n\r\n  return (\r\n    <Tag className={classes} {...restProps}>\r\n      <div className={bem.e('header')}>\r\n        {title && typeof title === 'string' ? (\r\n          <Typography type=\"h1\" className={bem.e('title')}>\r\n            {title}\r\n          </Typography>\r\n        ) : (\r\n          title\r\n        )}\r\n        {breadcrumbs && (\r\n          <Breadcrumb className={bem.e('breadcrumb')}>\r\n            <BreadcrumbItem>Home</BreadcrumbItem>\r\n            {breadcrumbs.length &&\r\n              breadcrumbs.map(({ name, active }, index) => (\r\n                <BreadcrumbItem key={index} active={active}>\r\n                  {name}\r\n                </BreadcrumbItem>\r\n              ))}\r\n          </Breadcrumb>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    }),\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = props => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props; // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\r\n\r\n  const pageCount = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산\r\n  if (pageCount === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여주지 않음\r\n\r\n  const pages = _.range(1, pageCount + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\r\n\r\n  return (\r\n    <nav>\r\n      {' '}\r\n      {/* VSCode 입력: nav>ul.pagination>li.page-item>a.page-link */}\r\n      <ul className=\"pagination\" style={{ padding: '2rem' }}>\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? 'page-item active' : 'page-item'} // Bootstrap을 이용하여 현재 페이지를 시각적으로 표시\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>{' '}\r\n            {/* 페이지 번호 클릭 이벤트 처리기 지정 */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import Page from 'components/Page';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\r\nimport Pagination from '../../utils/Pagination';\r\nimport { paginate } from '../../utils/paginate';\r\n\r\nfunction FavoritePage(props) {\r\n  const userId = localStorage.getItem('userId');\r\n  const [Favorites, setFavorites] = useState([]);\r\n  const [Count, setCount] = useState(0);\r\n  const [CP, setCP] = useState(1);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    getFavored();\r\n  }, []);\r\n\r\n  const getFavored = () => {\r\n    Axios.post(`/api/favorite/getFavored`, { userFrom: userId }).then(res => {\r\n      if (res.data.success) {\r\n        setFavorites({\r\n          data: res.data.favorites,\r\n          pageSize: 5,\r\n          currentPage: CP,\r\n        });\r\n        setCount(res.data.favorites.length);\r\n      } else {\r\n        alert('데이터를 가져오는데 실패했습니다.');\r\n      }\r\n    });\r\n  };\r\n\r\n  const onClickHandler = nation => event => {\r\n    console.log(nation);\r\n  };\r\n\r\n  const handlePageChange = page => {\r\n    setCP(page);\r\n    setFavorites({ ...Favorites, currentPage: page });\r\n  };\r\n\r\n  const { data, pageSize, currentPage } = Favorites;\r\n  const pagedFavorites = paginate(data, currentPage, pageSize);\r\n\r\n  if (Count === 0) {\r\n    return (\r\n      <Page\r\n        title=\"Favorite\"\r\n        breadcrumbs={[{ name: 'favorite', active: true }]}\r\n        className=\"TablePage\"\r\n      >\r\n        저장한 정보가 없습니다.\r\n      </Page>\r\n    );\r\n  } else {\r\n    return (\r\n      <Page\r\n        title=\"Favorite\"\r\n        breadcrumbs={[{ name: 'favorite', active: true }]}\r\n        className=\"TablePage\"\r\n      >\r\n        <Row>\r\n          <Col>\r\n            <Card className=\"mb-3\">\r\n              <CardHeader>저장한 나라</CardHeader>\r\n              <CardBody>\r\n                <Table hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>국가명</th>\r\n                      <th>국가명(영문)</th>\r\n                      <th>국가코드</th>\r\n                      <th>검색버튼</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {/* 여기서 맵으로 뿌려  */}\r\n                    {pagedFavorites.map((data, index) => {\r\n                      return (\r\n                        <tr\r\n                          key={index}\r\n                          // onClick={onClickHandler(data.nationKrNm)}\r\n                        >\r\n                          <th scope=\"row\">{index + 1}</th>\r\n                          <td>{data.nationKrNm}</td>\r\n                          <td>{data.nationEnNm}</td>\r\n                          <td>{data.nationIso2}</td>\r\n                          <td>\r\n                            <Link\r\n                              to={{\r\n                                pathname: '/search',\r\n                                name: `${data.nationKrNm}`,\r\n                              }}\r\n                            >\r\n                              search\r\n                            </Link>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n                <Pagination\r\n                  pageSize={pageSize}\r\n                  itemsCount={Count}\r\n                  currentPage={currentPage}\r\n                  onPageChange={handlePageChange}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FavoritePage;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize; // 자를 배열의 시작점\r\n\r\n  return _(items)\r\n    .slice(startIndex) // 시작점부터 배열을 자르되\r\n    .take(pageSize) // pageSize만큼의 배열을 취함\r\n    .value(); // lodash wrapper 객체를 regular 배열로 변환\r\n}\r\n\r\n//ex\r\n//13개를 4개씩 보여주는 페이지\r\n//0123-4567-891011-1213\r\n//  1   2     3     4   페이지 번호\r\n//0    4     8    12     startIndex\r\n"],"sourceRoot":""}