{"version":3,"sources":["components/precleaning/GeoWithDefcnt.js"],"names":["SearchPage","props","_useState","useState","_useState2","Object","C_Work_TravleingWithCorona_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","Defcnt","setDefcnt","_useState3","features","_useState4","NewFeatures","useEffect","window","scrollTo","endpointInfo","concat","getCovid19NatInfStateJson_URL","API_ENCODED_KEY","Axios","get","then","res","data","response","body","items","item","filtercnt","nation","cnt","filter","nationNmEn","indexOf","map","console","log","natDefCnt","properties","C_Work_TravleingWithCorona_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","ADMIN","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","components_Page__WEBPACK_IMPORTED_MODULE_3__","className","title","breadcrumbs","name","active"],"mappings":"2NAMaA,EAAa,SAAAC,GAAS,IAAAC,EACLC,mBAAS,IADJC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC1BK,EAD0BH,EAAA,GAClBI,EADkBJ,EAAA,GAAAK,EAEKN,mBAASO,KAFdC,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAE1BG,EAF0BD,EAAA,GAAAA,EAAA,GA+BjC,OA5BAE,oBAAU,WACRC,OAAOC,SAAS,EAAG,GACnB,IAAIC,EAAY,GAAAC,OAAMC,IAAN,gBAAAD,OAAkDE,IAAlD,2BAChBC,IAAMC,IAAIL,GAAcM,KAAK,SAAAC,GAC3Bf,EAAUe,EAAIC,KAAKC,SAASC,KAAKC,MAAMC,SAExC,IAEHf,oBAAU,WACR,IAAMgB,EAAY,SAAAC,GAChB,IAAIC,EAAM,EAOV,OANAxB,EAAOyB,OAAO,SAAAJ,GAAI,OAAyC,IAArCA,EAAKK,WAAWC,QAAQJ,KAAgBK,IAC5D,SAAAP,GACEQ,QAAQC,IAAIT,GACZG,EAAMH,EAAKU,YAGRP,GAETnB,EAAYuB,IAAI,SAAAP,GACdA,EAAKW,WAALlC,OAAAmC,EAAA,EAAAnC,CAAA,GACKuB,EAAKW,WADV,CAEED,UAAWT,EAAUD,EAAKW,WAAWE,YAIxC,CAAClC,IAGFmC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAU,aACVC,MAAM,SACNC,YAAa,CAAC,CAAEC,KAAM,SAAUC,QAAQ,KAH1C,mCAUWlD","file":"static/js/17.ce41559b.chunk.js","sourcesContent":["import { features } from 'assets/geo-data/countries.json';\r\nimport Page from 'components/Page';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { API_ENCODED_KEY, getCovid19NatInfStateJson_URL } from '../Config';\r\nimport Axios from 'axios';\r\n\r\nexport const SearchPage = props => {\r\n  const [Defcnt, setDefcnt] = useState([]);\r\n  const [NewFeatures, setNewFeatures] = useState(features);\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    let endpointInfo = `${getCovid19NatInfStateJson_URL}?serviceKey=${API_ENCODED_KEY}&startCreateDt=20211109`;\r\n    Axios.get(endpointInfo).then(res => {\r\n      setDefcnt(res.data.response.body.items.item);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtercnt = nation => {\r\n      let cnt = 0;\r\n      Defcnt.filter(item => item.nationNmEn.indexOf(nation) !== -1).map(\r\n        item => {\r\n          console.log(item);\r\n          cnt = item.natDefCnt;\r\n        },\r\n      );\r\n      return cnt;\r\n    };\r\n    NewFeatures.map(item => {\r\n      item.properties = {\r\n        ...item.properties,\r\n        natDefCnt: filtercnt(item.properties.ADMIN),\r\n      };\r\n    });\r\n    // console.log(NewFeatures);\r\n  }, [Defcnt]);\r\n\r\n  return (\r\n    <Page\r\n      className=\"SearchPage\"\r\n      title=\"Search\"\r\n      breadcrumbs={[{ name: 'Search', active: true }]}\r\n    >\r\n      데이터가공\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"sourceRoot":""}