{"version":3,"sources":["components/Widget/NumberWidget.js","components/Widget/IconWidget.js","components/Widget/index.js","components/precleaning/TravelAlarmData.js","components/Widget/WeatherWidget.js","components/views/SearchPage.js"],"names":["NumberWidget","_ref","title","subtitle","number","color","_ref$progress","progress","value","label","restProps","Object","objectWithoutProperties","react_default","a","createElement","Card","assign","body","className","CardText","tag","Typography","CardTitle","concat","Progress","style","height","defaultProps","IconWidget","bgColor","Icon","icon","iconProps","Onclick","OnMouseOver","OnMouseOut","classes","classNames","defineProperty","onClick","onMouseOver","onMouseOut","inverse","CardBody","size","CardSubtitle","__webpack_require__","d","__webpack_exports__","Widget_IconWidget","SearchPage","props","_useState","useState","_useState2","C_Users_LGUser_Desktop_corona_TravleingWithCorona_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","Alarm","setAlarm","_useState3","_useState4","SpAlarm","setSpAlarm","_useState5","_useState6","TravelAlarm","setTravelAlarm","_useState7","nation","_useState8","Nation","NationInfo","useEffect","window","scrollTo","Axios","get","then","res","data","filter","item","alarm_lvl","response","items","splimit","splimitPartial","spbanYan","spbanYnPartial","map","prevState","C_Users_LGUser_Desktop_corona_TravleingWithCorona_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","countryNm","country_nm","countryEnNm","country_eng_nm","ISO","country_iso_alp2","level","note","remark","sp","undefined","countryName","countryEnName","isoCode","splimitNote","spbanYna","spbanNote","name","length","indexOf","react__WEBPACK_IMPORTED_MODULE_2___default","reactstrap__WEBPACK_IMPORTED_MODULE_6__","lg","md","sm","xs","_Widget__WEBPACK_IMPORTED_MODULE_4__","MdReport","WeatherWidget","info","temp","description","user","useSelector","state","features","slicedToArray","_useState9","properties","NAME","_useState10","CountryName","setCountryName","_useState11","ADMIN","_useState12","CountryEnName","setCountryEnName","_useState13","ISO_A2","_useState14","CountryIso","setCountryIso","_useState15","_useState16","Visible","setVisible","_useState17","_useState18","setTitle","_useState19","_useState20","Content","setContent","_useState21","_useState22","CoronaInfo","setCoronaInfo","_useState23","_useState24","DefCnt","setDefCnt","_useState25","_useState26","IsInfo","setIsInfo","_useState27","_useState28","WeatherInfo","setWeatherInfo","_useState29","_useState30","IsFavorited","setIsFavorited","WeatherIcon","01n","WiSolarEclipse","02n","WiDayCloudy","03n","WiCloud","04n","WiCloudy","09n","WiShowers","10n","WiRain","11n","WiDayLightning","13n","WiSnow","50n","WiFog","01d","02d","03d","04d","09d","10d","11d","13d","50d","success","location","init","filterCnt","nationNm","tmp","natDefCnt","natDeathRate","Math","round","natDeathCnt","nm","onChangeIsFavoritedHandler","userFrom","localStorage","getItem","nationKrNm","nationEnNm","nationIso2","post","alert","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","preventDefault","getArrivalsServiceInfo","getWeatherInfo","stop","_x","apply","this","arguments","userData","isAuth","favorited","endpointInfo2","Weather_URI","Weather_KEY","main","humidity","weather","wind","speed","cloud","clouds","all","resultMsg","txt_origin_cn","Page","breadcrumbs","active","Row","Col","Form","inline","onSubmit","InputGroup","InputGroupAddon","addonType","Input","type","onChange","currentTarget","index","Button","outline","index_esm","Widget","MdCoronavirus","Widget_WeatherWidget","TravelAlarmData","CardHeader"],"mappings":"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","file":"static/js/11.ced2a77b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport { Card, CardText, CardTitle, Progress } from 'reactstrap';\r\nimport Typography from '../Typography';\r\n\r\nconst NumberWidget = ({\r\n  title,\r\n  subtitle,\r\n  number,\r\n  color,\r\n  progress: { value, label },\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <Card body {...restProps}>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <CardText tag=\"div\">\r\n          <Typography className=\"mb-0\">\r\n            <strong>{title}</strong>\r\n          </Typography>\r\n          <Typography className=\"mb-0 text-muted small\">{subtitle}</Typography>\r\n        </CardText>\r\n        <CardTitle className={`text-${color}`}>{number}</CardTitle>\r\n      </div>\r\n      <Progress value={value} color={color} style={{ height: '8px' }} />\r\n      <CardText tag=\"div\" className=\"d-flex justify-content-between\">\r\n        <Typography tag=\"span\" className=\"text-left text-muted small\">\r\n          {label}\r\n        </Typography>\r\n        <Typography tag=\"span\" className=\"text-right text-muted small\">\r\n          {value}%\r\n        </Typography>\r\n      </CardText>\r\n    </Card>\r\n  );\r\n};\r\n\r\nNumberWidget.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string,\r\n  number: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired,\r\n  ]),\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'info',\r\n    'warning',\r\n    'danger',\r\n    'light',\r\n    'dark',\r\n  ]),\r\n  progress: PropTypes.shape({\r\n    value: PropTypes.number,\r\n    label: PropTypes.string,\r\n  }),\r\n};\r\n\r\nNumberWidget.defaultProps = {\r\n  title: '',\r\n  subtitle: '',\r\n  number: 0,\r\n  color: 'primary',\r\n  progress: {\r\n    value: 0,\r\n    label: '',\r\n  },\r\n};\r\n\r\nexport default NumberWidget;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\nconst IconWidget = ({\r\n  bgColor,\r\n  icon: Icon,\r\n  iconProps,\r\n  title,\r\n  subtitle,\r\n  className,\r\n  Onclick,\r\n  OnMouseOver,\r\n  OnMouseOut,\r\n  ...restProps\r\n}) => {\r\n  const classes = classNames('cr-widget', className, {\r\n    [`bg-${bgColor}`]: bgColor,\r\n  });\r\n  return (\r\n    <div onClick={Onclick} onMouseOver={OnMouseOver} onMouseOut={OnMouseOut}>\r\n    <Card inverse className={classes} {...restProps} >\r\n      <CardBody className=\"cr-widget__icon\">\r\n        <Icon size={50} {...iconProps} />\r\n      </CardBody>\r\n      <CardBody>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardSubtitle>{subtitle}</CardSubtitle>\r\n      </CardBody>\r\n    </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nIconWidget.propTypes = {\r\n  bgColor: PropTypes.string,\r\n  icon: PropTypes.component,\r\n  iconProps: PropTypes.object,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n  Onclick: PropTypes.func,\r\n  OnMouseOver: PropTypes.func,\r\n  OnMouseOut: PropTypes.func,\r\n};\r\n\r\nIconWidget.defaultProps = {\r\n  bgColor: 'primary',\r\n  icon: 'span',\r\n  iconProps: { size: 50 },\r\n};\r\n\r\nexport default IconWidget;\r\n","export { default as NumberWidget } from './NumberWidget';\r\nexport { default as IconWidget } from './IconWidget';\r\n","import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { IconWidget } from '../Widget';\r\nimport { MdReport } from 'react-icons/md';\r\nimport { Col } from 'reactstrap';\r\n\r\nexport const SearchPage = props => {\r\n  const [Alarm, setAlarm] = useState([]);\r\n  const [SpAlarm, setSpAlarm] = useState([]);\r\n  const [TravelAlarm, setTravelAlarm] = useState([]);\r\n  const [Nation, setNation] = useState(props.nation);\r\n  let NationInfo = {};\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    Axios.get(`/api/info/TravelAlarm`).then(res => {\r\n      setAlarm(res.data.data.body.data.filter(item => item.alarm_lvl != null));\r\n    });\r\n    Axios.get(`/api/info/SpecialWarning`).then(res => {\r\n      setSpAlarm(\r\n        res.data.data.body.response.body.items.item.filter(\r\n          item =>\r\n            !item.splimit ||\r\n            !item.splimitPartial ||\r\n            !item.spbanYan ||\r\n            !item.spbanYnPartial,\r\n        ),\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Alarm.map(item => {\r\n      setTravelAlarm(prevState => [\r\n        ...prevState,\r\n        {\r\n          countryNm: item.country_nm,\r\n          countryEnNm: item.country_eng_nm,\r\n          ISO: item.country_iso_alp2,\r\n          level: item.alarm_lvl + '단계',\r\n          note: item.remark,\r\n        },\r\n      ]);\r\n    });\r\n  }, [Alarm]);\r\n\r\n  useEffect(() => {\r\n    SpAlarm.filter(sp => sp.splimit !== undefined).map(item => {\r\n      setTravelAlarm(prevState => [\r\n        ...prevState,\r\n        {\r\n          countryNm: item.countryName,\r\n          countryEnNm: item.countryEnName,\r\n          ISO: item.isoCode,\r\n          level: item.splimit,\r\n          note: item.splimitNote,\r\n        },\r\n      ]);\r\n    });\r\n    SpAlarm.filter(sp => sp.splimitPartial !== undefined).map(item => {\r\n      setTravelAlarm(prevState => [\r\n        ...prevState,\r\n        {\r\n          countryNm: item.countryName,\r\n          countryEnNm: item.countryEnName,\r\n          ISO: item.isoCode,\r\n          level: item.splimitPartial,\r\n          note: item.splimitNote,\r\n        },\r\n      ]);\r\n    });\r\n    SpAlarm.filter(sp => sp.spbanYna !== undefined).map(item => {\r\n      setTravelAlarm(prevState => [\r\n        ...prevState,\r\n        {\r\n          countryNm: item.countryName,\r\n          countryEnNm: item.countryEnName,\r\n          ISO: item.isoCode,\r\n          level: item.spbanYna,\r\n          note: item.spbanNote,\r\n        },\r\n      ]);\r\n    });\r\n    SpAlarm.filter(sp => sp.spbanYnPartial !== undefined).map(item => {\r\n      setTravelAlarm(prevState => [\r\n        ...prevState,\r\n        {\r\n          countryNm: item.countryName,\r\n          countryEnNm: item.countryEnName,\r\n          ISO: item.isoCode,\r\n          level: item.spbanYnPartial,\r\n          note: item.spbanNote,\r\n        },\r\n      ]);\r\n    });\r\n  }, [SpAlarm]);\r\n\r\n  const filterNation = name => {\r\n    TravelAlarm.filter(item => item.countryNm.indexOf(name) !== -1).map(\r\n      data => {\r\n        // console.log(data.level);\r\n        if (name === data.countryNm) {\r\n          NationInfo = {\r\n            level: data.level,\r\n            note: data.note,\r\n          };\r\n        }\r\n      },\r\n    );\r\n  };\r\n  // console.log(TravelAlarm);\r\n  if (TravelAlarm.length === 237) {\r\n    filterNation(Nation);\r\n    // console.log(TravelAlarm);\r\n  }\r\n\r\n  return (\r\n    <Col lg={3} md={6} sm={6} xs={12} className=\"mb-3\">\r\n      <IconWidget\r\n        bgColor={'secondary'}\r\n        icon={MdReport}\r\n        title=\"특별여행 경보단계\"\r\n        subtitle={NationInfo.level}\r\n      />\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\nconst WeatherWidget = ({\r\n  bgColor,\r\n  icon: Icon,\r\n  iconProps,\r\n  info,\r\n  className,\r\n  ...restProps\r\n}) => {\r\n  const classes = classNames('cr-widget', className, {\r\n    [`bg-${bgColor}`]: bgColor,\r\n  });\r\n  return (\r\n    <Card inverse className={classes} {...restProps}>\r\n      <CardBody className=\"cr-widget__icon\">\r\n        <Icon size={50} {...iconProps} />\r\n      </CardBody>\r\n      <CardBody>\r\n        <CardTitle>오늘 날씨</CardTitle>\r\n        <CardSubtitle>{info.temp}도</CardSubtitle>\r\n        <CardSubtitle>{info.description}</CardSubtitle>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nWeatherWidget.propTypes = {\r\n  bgColor: PropTypes.string,\r\n  icon: PropTypes.component,\r\n  iconProps: PropTypes.object,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n};\r\n\r\nWeatherWidget.defaultProps = {\r\n  bgColor: 'primary',\r\n  icon: 'span',\r\n  iconProps: { size: 50 },\r\n};\r\n\r\nexport default WeatherWidget;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport Page from 'components/Page';\r\nimport { features } from '../../assets/geo-data/countries.json';\r\nimport { IconWidget } from '../../components/Widget';\r\nimport WeatherWidget from '../Widget/WeatherWidget';\r\nimport TravleAlarmData from '../precleaning/TravelAlarmData';\r\nimport { Weather_URI, Weather_KEY } from '../Config';\r\nimport { MdCoronavirus, MdFavoriteBorder, MdFavorite } from 'react-icons/md';\r\nimport {\r\n  WiSolarEclipse,\r\n  WiDayCloudy,\r\n  WiCloud,\r\n  WiCloudy,\r\n  WiShowers,\r\n  WiRain,\r\n  WiDayLightning,\r\n  WiSnow,\r\n  WiFog,\r\n} from 'weather-icons-react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from 'reactstrap';\r\n\r\nexport const SearchPage = props => {\r\n  const user = useSelector(state => state.user);\r\n  const [Nation, setNation] = useState(features);\r\n  const [ReturnType, setReturnType] = useState('JSON');\r\n  const [NumOfRows, setNumOfRows] = useState(10);\r\n  const [PageNo, setPageNo] = useState(1);\r\n  const [CountryName, setCountryName] = useState(Nation[0].properties.NAME);\r\n  const [CountryEnName, setCountryEnName] = useState(\r\n    Nation[0].properties.ADMIN,\r\n  );\r\n  const [CountryIso, setCountryIso] = useState(Nation[0].properties.ISO_A2);\r\n  const [Visible, setVisible] = useState(false);\r\n  const [Title, setTitle] = useState('');\r\n  const [Content, setContent] = useState('');\r\n  const [CoronaInfo, setCoronaInfo] = useState([]);\r\n  const [DefCnt, setDefCnt] = useState({});\r\n  const [IsInfo, setIsInfo] = useState(true);\r\n  const [WeatherInfo, setWeatherInfo] = useState({});\r\n  const [IsFavorited, setIsFavorited] = useState(false);\r\n  const WeatherIcon = {\r\n    '01n': WiSolarEclipse,\r\n    '02n': WiDayCloudy,\r\n    '03n': WiCloud,\r\n    '04n': WiCloudy,\r\n    '09n': WiShowers,\r\n    '10n': WiRain,\r\n    '11n': WiDayLightning,\r\n    '13n': WiSnow,\r\n    '50n': WiFog,\r\n    '01d': WiSolarEclipse,\r\n    '02d': WiDayCloudy,\r\n    '03d': WiCloud,\r\n    '04d': WiCloudy,\r\n    '09d': WiShowers,\r\n    '10d': WiRain,\r\n    '11d': WiDayLightning,\r\n    '13d': WiSnow,\r\n    '50d': WiFog,\r\n  };\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    Axios.get(`/api/info/Covid19Nat`).then(res => {\r\n      if (res.data.success) {\r\n        setCoronaInfo(res.data.data.body.response.body.items.item);\r\n      }\r\n    });\r\n    if (props.location.name !== undefined) {\r\n      init();\r\n    }\r\n  }, []);\r\n\r\n  const init = () => {\r\n    setCountryName(props.location.name);\r\n  };\r\n\r\n  const filterCnt = name => {\r\n    CoronaInfo.filter(item => item.nationNm.indexOf(name) != -1).map(data => {\r\n      if (name === data.nationNm) {\r\n        let tmp = {\r\n          natDefCnt: data.natDefCnt,\r\n          natDeathRate: {\r\n            value: Math.round(data.natDeathRate * 100),\r\n            label: '사망률',\r\n          },\r\n          natDeathCnt: data.natDeathCnt,\r\n          nm: data.nationNm,\r\n        };\r\n        setDefCnt(tmp);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onCountryNameHandler = event => {\r\n    setCountryName(event.currentTarget.value);\r\n  };\r\n\r\n  const onChangeIsFavoritedHandler = () => {\r\n    let data = {\r\n      userFrom: localStorage.getItem('userId'),\r\n      nationKrNm: CountryName,\r\n      nationEnNm: CountryEnName,\r\n      nationIso2: CountryIso,\r\n    };\r\n    if (!IsFavorited) {\r\n      Axios.post(`/api/favorite/addToFavorite`, data).then(res => {\r\n        if (res.data.success) {\r\n          setIsFavorited(true);\r\n        } else {\r\n          alert('저장하지 못했습니다.');\r\n        }\r\n      });\r\n    } else {\r\n      Axios.post(`/api/favorite/removeFromFavorite`, data).then(res => {\r\n        if (res.data.success) {\r\n          setIsFavorited(false);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setVisible(true);\r\n    getArrivalsServiceInfo();\r\n    filterCnt(CountryName);\r\n    getWeatherInfo();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let data = {\r\n      nationKrNm: CountryName,\r\n      userFrom: localStorage.getItem('userId'),\r\n    };\r\n    if (user.userData && user.userData.isAuth) {\r\n      Axios.post('/api/favorite/favorited', data).then(res => {\r\n        if (res.data.success) {\r\n          setIsFavorited(res.data.favorited);\r\n        }\r\n      });\r\n    }\r\n    const filterNameToIso = name => {\r\n      features\r\n        .filter(item => item.properties.NAME.indexOf(name) != -1)\r\n        .map(data => {\r\n          if (name === data.properties.NAME) {\r\n            setCountryEnName(data.properties.ADMIN);\r\n            setCountryIso(data.properties.ISO_A2);\r\n          }\r\n        });\r\n    };\r\n    filterNameToIso(CountryName);\r\n  }, [CountryName]);\r\n\r\n  const getWeatherInfo = () => {\r\n    let endpointInfo2 = `${Weather_URI}?q=${CountryEnName}&appid=${Weather_KEY}`;\r\n    Axios.get(endpointInfo2).then(res => {\r\n      let tmp = {\r\n        temp: Math.round(res.data.main.temp - 273.15),\r\n        humidity: res.data.main.humidity,\r\n        weather: res.data.weather[0].main,\r\n        description: res.data.weather[0].description,\r\n        icon: WeatherIcon[res.data.weather[0].icon],\r\n        wind: res.data.wind.speed,\r\n        cloud: res.data.clouds.all + '%',\r\n      };\r\n      setWeatherInfo(tmp);\r\n    });\r\n  };\r\n\r\n  const getArrivalsServiceInfo = () => {\r\n    let tmp = {\r\n      CountryName,\r\n      CountryIso,\r\n    };\r\n    Axios.post(`/api/info/ArrivalsService`, tmp).then(res => {\r\n      if (res.data.success) {\r\n        if (res.data.data.body.resultMsg == '정상') {\r\n          if (res.data.data.body.data.length == 0) {\r\n            setIsInfo(false);\r\n          } else {\r\n            setIsInfo(true);\r\n            res.data.data.body.data.map(item => {\r\n              setTitle(item.title);\r\n              setContent(item.txt_origin_cn);\r\n            });\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      className=\"SearchPage\"\r\n      title=\"Search\"\r\n      breadcrumbs={[{ name: 'Search', active: true }]}\r\n    >\r\n      <Row>\r\n        <Col lg={12} md={12} sm={12} xs={12}>\r\n              <Form inline className=\"cr-search-form\" onSubmit={handleSubmit}>\r\n              <InputGroup size=\"lg\">\r\n              <InputGroupAddon addonType=\"prepend\">국가</InputGroupAddon>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"select\"\r\n                  value={CountryName}\r\n                  onChange={onCountryNameHandler}\r\n                >\r\n                  {features.map((data, index) => {\r\n                    return <option>{data.properties.NAME}</option>;\r\n                  })}\r\n                </Input>\r\n                </InputGroup>\r\n                &nbsp;&nbsp;&nbsp;\r\n                <Button color=\"primary\" onClick={handleSubmit} size=\"lg\">\r\n                  검색\r\n                </Button>\r\n              </Form>\r\n        </Col>\r\n        {user.userData && user.userData.isAuth && IsFavorited && (\r\n          <Col>\r\n            <Button\r\n              outline\r\n              onClick={onChangeIsFavoritedHandler}\r\n              color=\"secondary\"\r\n            >\r\n              <MdFavorite size={30} />\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        {user.userData && user.userData.isAuth && !IsFavorited && (\r\n          <Col>\r\n            <Button\r\n              outline\r\n              onClick={onChangeIsFavoritedHandler}\r\n              color=\"secondary\"\r\n            >\r\n              <MdFavoriteBorder size={30} />\r\n            </Button>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n      {IsInfo && Visible && (\r\n        <Row>\r\n          <Col lg={3} md={6} sm={6} xs={12} className=\"mb-3\">\r\n            <IconWidget\r\n              bgColor={'secondary'}\r\n              icon={MdCoronavirus}\r\n              title=\"코로나 확진자 수\"\r\n              subtitle={DefCnt.natDefCnt + '명'}\r\n            />\r\n          </Col>\r\n          <Col lg={3} md={6} sm={6} xs={12} className=\"mb-3\">\r\n            <IconWidget\r\n              bgColor={'secondary'}\r\n              icon={MdCoronavirus}\r\n              title=\"코로나 사망자 수\"\r\n              subtitle={DefCnt.natDeathCnt + '명'}\r\n            />\r\n          </Col>\r\n          <Col lg={3} md={6} sm={6} xs={12} className=\"mb-3\">\r\n            <WeatherWidget\r\n              bgColor={'secondary'}\r\n              icon={WeatherInfo.icon}\r\n              info={WeatherInfo}\r\n            />\r\n          </Col>\r\n          <TravleAlarmData nation={CountryName} />\r\n        </Row>\r\n      )}\r\n      {IsInfo && Visible && (\r\n        <Row>\r\n          <Col>\r\n            <Card className=\"mb-3\">\r\n              <CardHeader>각국의 해외입국자에 대한 조치 현황 </CardHeader>\r\n              <CardBody>{Content}</CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {!IsInfo && Visible && (\r\n        <Row>\r\n          <Col>\r\n            <Card className=\"mb-3\">\r\n              <CardHeader>각국의 해외입국자에 대한 조치 현황</CardHeader>\r\n              <CardBody>정보가 없습니다.</CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"sourceRoot":""}