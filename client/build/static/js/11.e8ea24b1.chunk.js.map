{"version":3,"sources":["components/Widget/NumberWidget.js","components/Widget/IconWidget.js","components/Widget/index.js","components/precleaning/TravelAlarmData.js","components/Widget/WeatherWidget.js","components/views/SearchPage.js"],"names":["NumberWidget","_ref","title","subtitle","number","color","_ref$progress","progress","value","label","restProps","Object","objectWithoutProperties","react_default","a","createElement","Card","assign","body","className","CardText","tag","Typography","CardTitle","concat","Progress","style","height","defaultProps","IconWidget","bgColor","Icon","icon","iconProps","Onclick","OnMouseOver","OnMouseOut","classes","classNames","defineProperty","onClick","onMouseOver","onMouseOut","inverse","CardBody","size","CardSubtitle","__webpack_require__","d","__webpack_exports__","Widget_IconWidget","SearchPage","props","_useState","useState","_useState2","C_Work_TravleingWithCorona_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","Alarm","setAlarm","_useState3","_useState4","SpAlarm","setSpAlarm","_useState5","_useState6","TravelAlarm","setTravelAlarm","_useState7","nation","_useState8","Nation","NationInfo","useEffect","window","scrollTo","endpointInfo","getTravelAlarm_URL","API_ENCODED_KEY","Axios","get","then","res","data","filter","item","alarm_lvl","endpointInfo2","TravelSpecialWarningService_URL","response","items","splimit","splimitPartial","spbanYan","spbanYnPartial","map","prevState","C_Work_TravleingWithCorona_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","countryNm","country_nm","countryEnNm","country_eng_nm","ISO","country_iso_alp2","level","note","remark","sp","undefined","countryName","countryEnName","isoCode","splimitNote","spbanYna","spbanNote","name","length","indexOf","react__WEBPACK_IMPORTED_MODULE_2___default","reactstrap__WEBPACK_IMPORTED_MODULE_7__","lg","md","sm","xs","_Widget__WEBPACK_IMPORTED_MODULE_5__","MdReport","WeatherWidget","info","temp","description","user","useSelector","state","features","slicedToArray","ReturnType","NumOfRows","PageNo","_useState9","properties","NAME","_useState10","CountryName","setCountryName","_useState11","ADMIN","_useState12","CountryEnName","setCountryEnName","_useState13","ISO_A2","_useState14","CountryIso","setCountryIso","_useState15","_useState16","Visible","setVisible","_useState17","_useState18","setTitle","_useState19","_useState20","Content","setContent","_useState21","_useState22","CoronaInfo","setCoronaInfo","_useState23","_useState24","DefCnt","setDefCnt","_useState25","_useState26","IsInfo","setIsInfo","_useState27","_useState28","WeatherInfo","setWeatherInfo","_useState29","_useState30","IsFavorited","setIsFavorited","WeatherIcon","01n","WiSolarEclipse","02n","WiDayCloudy","03n","WiCloud","04n","WiCloudy","09n","WiShowers","10n","WiRain","11n","WiDayLightning","13n","WiSnow","50n","WiFog","01d","02d","03d","04d","09d","10d","11d","13d","50d","endpointInfo1","getCovid19NatInfStateJson_URL","location","init","filterCnt","nationNm","tmp","natDefCnt","natDeathRate","Math","round","natDeathCnt","nm","onChangeIsFavoritedHandler","userFrom","localStorage","getItem","nationKrNm","nationEnNm","nationIso2","post","success","alert","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","preventDefault","getArrivalsServiceInfo","getWeatherInfo","stop","_x","apply","this","arguments","favorited","Weather_URI","Weather_KEY","main","humidity","weather","wind","speed","cloud","clouds","all","ArrivalsService_URL","encodeURI","resultMsg","txt_origin_cn","Page","breadcrumbs","active","Row","Col","CardHeader","Form","inline","onSubmit","Input","type","onChange","currentTarget","index","Button","userData","isAuth","outline","index_esm","Widget","MdCoronavirus","Widget_WeatherWidget","TravelAlarmData"],"mappings":"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","file":"static/js/11.e8ea24b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport { Card, CardText, CardTitle, Progress } from 'reactstrap';\r\nimport Typography from '../Typography';\r\n\r\nconst NumberWidget = ({\r\n  title,\r\n  subtitle,\r\n  number,\r\n  color,\r\n  progress: { value, label },\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <Card body {...restProps}>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <CardText tag=\"div\">\r\n          <Typography className=\"mb-0\">\r\n            <strong>{title}</strong>\r\n          </Typography>\r\n          <Typography className=\"mb-0 text-muted small\">{subtitle}</Typography>\r\n        </CardText>\r\n        <CardTitle className={`text-${color}`}>{number}</CardTitle>\r\n      </div>\r\n      <Progress value={value} color={color} style={{ height: '8px' }} />\r\n      <CardText tag=\"div\" className=\"d-flex justify-content-between\">\r\n        <Typography tag=\"span\" className=\"text-left text-muted small\">\r\n          {label}\r\n        </Typography>\r\n        <Typography tag=\"span\" className=\"text-right text-muted small\">\r\n          {value}%\r\n        </Typography>\r\n      </CardText>\r\n    </Card>\r\n  );\r\n};\r\n\r\nNumberWidget.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string,\r\n  number: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired,\r\n  ]),\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'info',\r\n    'warning',\r\n    'danger',\r\n    'light',\r\n    'dark',\r\n  ]),\r\n  progress: PropTypes.shape({\r\n    value: PropTypes.number,\r\n    label: PropTypes.string,\r\n  }),\r\n};\r\n\r\nNumberWidget.defaultProps = {\r\n  title: '',\r\n  subtitle: '',\r\n  number: 0,\r\n  color: 'primary',\r\n  progress: {\r\n    value: 0,\r\n    label: '',\r\n  },\r\n};\r\n\r\nexport default NumberWidget;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\nconst IconWidget = ({\r\n  bgColor,\r\n  icon: Icon,\r\n  iconProps,\r\n  title,\r\n  subtitle,\r\n  className,\r\n  Onclick,\r\n  OnMouseOver,\r\n  OnMouseOut,\r\n  ...restProps\r\n}) => {\r\n  const classes = classNames('cr-widget', className, {\r\n    [`bg-${bgColor}`]: bgColor,\r\n  });\r\n  return (\r\n    <div onClick={Onclick} onMouseOver={OnMouseOver} onMouseOut={OnMouseOut}>\r\n    <Card inverse className={classes} {...restProps} >\r\n      <CardBody className=\"cr-widget__icon\">\r\n        <Icon size={50} {...iconProps} />\r\n      </CardBody>\r\n      <CardBody>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardSubtitle>{subtitle}</CardSubtitle>\r\n      </CardBody>\r\n    </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nIconWidget.propTypes = {\r\n  bgColor: PropTypes.string,\r\n  icon: PropTypes.component,\r\n  iconProps: PropTypes.object,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n  Onclick: PropTypes.func,\r\n  OnMouseOver: PropTypes.func,\r\n  OnMouseOut: PropTypes.func,\r\n};\r\n\r\nIconWidget.defaultProps = {\r\n  bgColor: 'primary',\r\n  icon: 'span',\r\n  iconProps: { size: 50 },\r\n};\r\n\r\nexport default IconWidget;\r\n","export { default as NumberWidget } from './NumberWidget';\r\nexport { default as IconWidget } from './IconWidget';\r\n","import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport {\r\n  API_ENCODED_KEY,\r\n  getTravelAlarm_URL,\r\n  TravelSpecialWarningService_URL,\r\n  chanbi_key,\r\n} from '../Config';\r\nimport { IconWidget } from '../Widget';\r\nimport { MdReport } from 'react-icons/md';\r\nimport { Col } from 'reactstrap';\r\n\r\nexport const SearchPage = props => {\r\n  const [Alarm, setAlarm] = useState([]);\r\n  const [SpAlarm, setSpAlarm] = useState([]);\r\n  const [TravelAlarm, setTravelAlarm] = useState([]);\r\n  const [Nation, setNation] = useState(props.nation);\r\n  let NationInfo = {};\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    let endpointInfo = `${getTravelAlarm_URL}?serviceKey=${API_ENCODED_KEY}&pageNo=1&numOfRows=200`;\r\n    Axios.get(endpointInfo).then(res => {\r\n      setAlarm(res.data.data.filter(item => item.alarm_lvl != null));\r\n    });\r\n    let endpointInfo2 = `${TravelSpecialWarningService_URL}?serviceKey=${API_ENCODED_KEY}&pageNo=1&numOfRows=200`;\r\n    Axios.get(endpointInfo2).then(res => {\r\n      setSpAlarm(\r\n        res.data.response.body.items.item.filter(\r\n          item =>\r\n            !item.splimit ||\r\n            !item.splimitPartial ||\r\n            !item.spbanYan ||\r\n            !item.spbanYnPartial,\r\n        ),\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Alarm.map(item => {\r\n      setTravelAlarm(prevState => [\r\n        ...prevState,\r\n        {\r\n          countryNm: item.country_nm,\r\n          countryEnNm: item.country_eng_nm,\r\n          ISO: item.country_iso_alp2,\r\n          level: item.alarm_lvl + '단계',\r\n          note: item.remark,\r\n        },\r\n      ]);\r\n    });\r\n  }, [Alarm]);\r\n\r\n  useEffect(() => {\r\n    SpAlarm.filter(sp => sp.splimit !== undefined).map(item => {\r\n      setTravelAlarm(prevState => [\r\n        ...prevState,\r\n        {\r\n          countryNm: item.countryName,\r\n          countryEnNm: item.countryEnName,\r\n          ISO: item.isoCode,\r\n          level: item.splimit,\r\n          note: item.splimitNote,\r\n        },\r\n      ]);\r\n    });\r\n    SpAlarm.filter(sp => sp.splimitPartial !== undefined).map(item => {\r\n      setTravelAlarm(prevState => [\r\n        ...prevState,\r\n        {\r\n          countryNm: item.countryName,\r\n          countryEnNm: item.countryEnName,\r\n          ISO: item.isoCode,\r\n          level: item.splimitPartial,\r\n          note: item.splimitNote,\r\n        },\r\n      ]);\r\n    });\r\n    SpAlarm.filter(sp => sp.spbanYna !== undefined).map(item => {\r\n      setTravelAlarm(prevState => [\r\n        ...prevState,\r\n        {\r\n          countryNm: item.countryName,\r\n          countryEnNm: item.countryEnName,\r\n          ISO: item.isoCode,\r\n          level: item.spbanYna,\r\n          note: item.spbanNote,\r\n        },\r\n      ]);\r\n    });\r\n    SpAlarm.filter(sp => sp.spbanYnPartial !== undefined).map(item => {\r\n      setTravelAlarm(prevState => [\r\n        ...prevState,\r\n        {\r\n          countryNm: item.countryName,\r\n          countryEnNm: item.countryEnName,\r\n          ISO: item.isoCode,\r\n          level: item.spbanYnPartial,\r\n          note: item.spbanNote,\r\n        },\r\n      ]);\r\n    });\r\n  }, [SpAlarm]);\r\n\r\n  const filterNation = name => {\r\n    TravelAlarm.filter(item => item.countryNm.indexOf(name) !== -1).map(\r\n      data => {\r\n        // console.log(data.level);\r\n        if (name === data.countryNm) {\r\n          NationInfo = {\r\n            level: data.level,\r\n            note: data.note,\r\n          };\r\n        }\r\n      },\r\n    );\r\n  };\r\n  // console.log(TravelAlarm);\r\n  if (TravelAlarm.length === 237) {\r\n    filterNation(Nation);\r\n    // console.log(TravelAlarm);\r\n  }\r\n\r\n  return (\r\n    <Col lg={3} md={6} sm={6} xs={12} className=\"mb-3\">\r\n      <IconWidget\r\n        bgColor={'secondary'}\r\n        icon={MdReport}\r\n        title=\"특별여행 경보단계\"\r\n        subtitle={NationInfo.level}\r\n      />\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\nconst WeatherWidget = ({\r\n  bgColor,\r\n  icon: Icon,\r\n  iconProps,\r\n  info,\r\n  className,\r\n  ...restProps\r\n}) => {\r\n  const classes = classNames('cr-widget', className, {\r\n    [`bg-${bgColor}`]: bgColor,\r\n  });\r\n  return (\r\n    <Card inverse className={classes} {...restProps}>\r\n      <CardBody className=\"cr-widget__icon\">\r\n        <Icon size={50} {...iconProps} />\r\n      </CardBody>\r\n      <CardBody>\r\n        <CardTitle>오늘 날씨</CardTitle>\r\n        <CardSubtitle>{info.temp}도</CardSubtitle>\r\n        <CardSubtitle>{info.description}</CardSubtitle>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nWeatherWidget.propTypes = {\r\n  bgColor: PropTypes.string,\r\n  icon: PropTypes.component,\r\n  iconProps: PropTypes.object,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n};\r\n\r\nWeatherWidget.defaultProps = {\r\n  bgColor: 'primary',\r\n  icon: 'span',\r\n  iconProps: { size: 50 },\r\n};\r\n\r\nexport default WeatherWidget;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport Page from 'components/Page';\r\nimport { features } from '../../assets/geo-data/countries.json';\r\nimport { IconWidget } from '../../components/Widget';\r\nimport WeatherWidget from '../Widget/WeatherWidget';\r\nimport TravleAlarmData from '../precleaning/TravelAlarmData';\r\nimport {\r\n  ArrivalsService_URL,\r\n  API_ENCODED_KEY,\r\n  getCovid19NatInfStateJson_URL,\r\n  Weather_URI,\r\n  Weather_KEY,\r\n} from '../Config';\r\nimport { MdCoronavirus, MdFavoriteBorder, MdFavorite } from 'react-icons/md';\r\nimport {\r\n  WiSolarEclipse,\r\n  WiDayCloudy,\r\n  WiCloud,\r\n  WiCloudy,\r\n  WiShowers,\r\n  WiRain,\r\n  WiDayLightning,\r\n  WiSnow,\r\n  WiFog,\r\n} from 'weather-icons-react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Button,\r\n  Form,\r\n  Input,\r\n} from 'reactstrap';\r\n\r\nexport const SearchPage = props => {\r\n  const user = useSelector(state => state.user);\r\n  const [Nation, setNation] = useState(features);\r\n  const [ReturnType, setReturnType] = useState('JSON');\r\n  const [NumOfRows, setNumOfRows] = useState(10);\r\n  const [PageNo, setPageNo] = useState(1);\r\n  const [CountryName, setCountryName] = useState(Nation[0].properties.NAME);\r\n  const [CountryEnName, setCountryEnName] = useState(\r\n    Nation[0].properties.ADMIN,\r\n  );\r\n  const [CountryIso, setCountryIso] = useState(Nation[0].properties.ISO_A2);\r\n  const [Visible, setVisible] = useState(false);\r\n  const [Title, setTitle] = useState('');\r\n  const [Content, setContent] = useState('');\r\n  const [CoronaInfo, setCoronaInfo] = useState([]);\r\n  const [DefCnt, setDefCnt] = useState({});\r\n  const [IsInfo, setIsInfo] = useState(true);\r\n  const [WeatherInfo, setWeatherInfo] = useState({});\r\n  const [IsFavorited, setIsFavorited] = useState(false);\r\n  const WeatherIcon = {\r\n    '01n': WiSolarEclipse,\r\n    '02n': WiDayCloudy,\r\n    '03n': WiCloud,\r\n    '04n': WiCloudy,\r\n    '09n': WiShowers,\r\n    '10n': WiRain,\r\n    '11n': WiDayLightning,\r\n    '13n': WiSnow,\r\n    '50n': WiFog,\r\n    '01d': WiSolarEclipse,\r\n    '02d': WiDayCloudy,\r\n    '03d': WiCloud,\r\n    '04d': WiCloudy,\r\n    '09d': WiShowers,\r\n    '10d': WiRain,\r\n    '11d': WiDayLightning,\r\n    '13d': WiSnow,\r\n    '50d': WiFog,\r\n  };\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    let endpointInfo1 = `${getCovid19NatInfStateJson_URL}?serviceKey=${API_ENCODED_KEY}&startCreateDt=20211109&endCreateDt=20211109`;\r\n    Axios.get(endpointInfo1).then(res => {\r\n      setCoronaInfo(res.data.response.body.items.item);\r\n    });\r\n    if (props.location.name !== undefined) {\r\n      init();\r\n    }\r\n  }, []);\r\n\r\n  const init = () => {\r\n    setCountryName(props.location.name);\r\n  };\r\n\r\n  const filterCnt = name => {\r\n    CoronaInfo.filter(item => item.nationNm.indexOf(name) != -1).map(data => {\r\n      if (name === data.nationNm) {\r\n        let tmp = {\r\n          natDefCnt: data.natDefCnt,\r\n          natDeathRate: {\r\n            value: Math.round(data.natDeathRate * 100),\r\n            label: '사망률',\r\n          },\r\n          natDeathCnt: data.natDeathCnt,\r\n          nm: data.nationNm,\r\n        };\r\n        setDefCnt(tmp);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onCountryNameHandler = event => {\r\n    setCountryName(event.currentTarget.value);\r\n  };\r\n\r\n  const onChangeIsFavoritedHandler = () => {\r\n    let data = {\r\n      userFrom: localStorage.getItem('userId'),\r\n      nationKrNm: CountryName,\r\n      nationEnNm: CountryEnName,\r\n      nationIso2: CountryIso,\r\n    };\r\n    if (!IsFavorited) {\r\n      Axios.post(`/api/favorite/addToFavorite`, data).then(res => {\r\n        if (res.data.success) {\r\n          setIsFavorited(true);\r\n        } else {\r\n          alert('저장하지 못했습니다.');\r\n        }\r\n      });\r\n    } else {\r\n      Axios.post(`/api/favorite/removeFromFavorite`, data).then(res => {\r\n        if (res.data.success) {\r\n          setIsFavorited(false);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setVisible(true);\r\n    getArrivalsServiceInfo();\r\n    filterCnt(CountryName);\r\n    getWeatherInfo();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let data = {\r\n      nationKrNm: CountryName,\r\n      userFrom: localStorage.getItem('userId'),\r\n    };\r\n    Axios.post('/api/favorite/favorited', data).then(res => {\r\n      if (res.data.success) {\r\n        setIsFavorited(res.data.favorited);\r\n      }\r\n    });\r\n    const filterNameToIso = name => {\r\n      features\r\n        .filter(item => item.properties.NAME.indexOf(name) != -1)\r\n        .map(data => {\r\n          if (name === data.properties.NAME) {\r\n            setCountryEnName(data.properties.ADMIN);\r\n            setCountryIso(data.properties.ISO_A2);\r\n          }\r\n        });\r\n    };\r\n    filterNameToIso(CountryName);\r\n  }, [CountryName]);\r\n\r\n  const getWeatherInfo = () => {\r\n    let endpointInfo2 = `${Weather_URI}?q=${CountryEnName}&appid=${Weather_KEY}`;\r\n    Axios.get(endpointInfo2).then(res => {\r\n      let tmp = {\r\n        temp: Math.round(res.data.main.temp - 273.15),\r\n        humidity: res.data.main.humidity,\r\n        weather: res.data.weather[0].main,\r\n        description: res.data.weather[0].description,\r\n        icon: WeatherIcon[res.data.weather[0].icon],\r\n        wind: res.data.wind.speed,\r\n        cloud: res.data.clouds.all + '%',\r\n      };\r\n      setWeatherInfo(tmp);\r\n    });\r\n  };\r\n\r\n  const getArrivalsServiceInfo = () => {\r\n    let endpointInfo =\r\n      `${ArrivalsService_URL}?serviceKey=${API_ENCODED_KEY}&returnType=${ReturnType}\r\n    &numOfRows=${NumOfRows}&pageNo=${PageNo}&cond[country_nm::EQ]=` +\r\n      encodeURI(`${CountryName}`) +\r\n      `&cond[country_iso_alp2::EQ]=${CountryIso}`;\r\n    Axios.get(endpointInfo).then((res, body) => {\r\n      if (res.data.resultMsg === '정상') {\r\n        if (res.data.data.length == 0) {\r\n          setIsInfo(false);\r\n        } else {\r\n          setIsInfo(true);\r\n          res.data.data.map(item => {\r\n            setTitle(item.title);\r\n            setContent(item.txt_origin_cn);\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      className=\"SearchPage\"\r\n      title=\"Search\"\r\n      breadcrumbs={[{ name: 'Search', active: true }]}\r\n    >\r\n      <Row>\r\n        <Col lg={6} md={6} sm={6} xs={12}>\r\n          <Card className=\"mb-3\">\r\n            <CardHeader>\r\n              국가를 선택해주세요.\r\n              <Form inline className=\"cr-search-form\" onSubmit={handleSubmit}>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"select\"\r\n                  value={CountryName}\r\n                  onChange={onCountryNameHandler}\r\n                >\r\n                  {features.map((data, index) => {\r\n                    return <option>{data.properties.NAME}</option>;\r\n                  })}\r\n                </Input>\r\n                &nbsp;&nbsp;&nbsp;\r\n                <Button color=\"secondary\" onClick={handleSubmit}>\r\n                  검색\r\n                </Button>\r\n              </Form>\r\n            </CardHeader>\r\n          </Card>\r\n        </Col>\r\n        {user.userData && user.userData.isAuth && IsFavorited && (\r\n          <Col>\r\n            <Button\r\n              outline\r\n              onClick={onChangeIsFavoritedHandler}\r\n              color=\"secondary\"\r\n            >\r\n              <MdFavorite size={30} />\r\n            </Button>\r\n          </Col>\r\n        )}\r\n        {user.userData && user.userData.isAuth && !IsFavorited && (\r\n          <Col>\r\n            <Button\r\n              outline\r\n              onClick={onChangeIsFavoritedHandler}\r\n              color=\"secondary\"\r\n            >\r\n              <MdFavoriteBorder size={30} />\r\n            </Button>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n      {IsInfo && Visible && (\r\n        <Row>\r\n          <Col lg={3} md={6} sm={6} xs={12} className=\"mb-3\">\r\n            <IconWidget\r\n              bgColor={'secondary'}\r\n              icon={MdCoronavirus}\r\n              title=\"코로나 확진자 수\"\r\n              subtitle={DefCnt.natDefCnt + '명'}\r\n            />\r\n          </Col>\r\n          <Col lg={3} md={6} sm={6} xs={12} className=\"mb-3\">\r\n            <IconWidget\r\n              bgColor={'secondary'}\r\n              icon={MdCoronavirus}\r\n              title=\"코로나 사망자 수\"\r\n              subtitle={DefCnt.natDeathCnt + '명'}\r\n            />\r\n          </Col>\r\n          <Col lg={3} md={6} sm={6} xs={12} className=\"mb-3\">\r\n            <WeatherWidget\r\n              bgColor={'secondary'}\r\n              icon={WeatherInfo.icon}\r\n              info={WeatherInfo}\r\n            />\r\n          </Col>\r\n          <TravleAlarmData nation={CountryName} />\r\n        </Row>\r\n      )}\r\n      {IsInfo && Visible && (\r\n        <Row>\r\n          <Col>\r\n            <Card className=\"mb-3\">\r\n              <CardHeader>각국의 해외입국자에 대한 조치 현황 </CardHeader>\r\n              <CardBody>{Content}</CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {!IsInfo && Visible && (\r\n        <Row>\r\n          <Col>\r\n            <Card className=\"mb-3\">\r\n              <CardHeader>각국의 해외입국자에 대한 조치 현황</CardHeader>\r\n              <CardBody>정보가 없습니다.</CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"sourceRoot":""}