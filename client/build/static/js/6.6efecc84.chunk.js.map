{"version":3,"sources":["components/Typography.js","components/Page.js","components/map/Loading.jsx","utils/colors.js","components/Widget/NumberWidget.js","components/Widget/IconWidget.js","components/Widget/index.js","components/Config.js","components/Widget/WeatherWidget.js","utils/Pagination.js","components/chart/CovidRateCnt.js","components/precleaning/TravelAlarmData2.js","components/views/FavoritePage.js","utils/paginate.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","_Users_baechanbi_Documents_GitHub_TravleingWithCorona_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","_Users_baechanbi_Documents_GitHub_TravleingWithCorona_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","description","breadcrumbs","children","_Users_baechanbi_Documents_GitHub_TravleingWithCorona_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Loading","style","height","display","justifyContent","role","d","__webpack_exports__","getColor","availableColor","arguments","length","undefined","window","getComputedStyle","document","documentElement","getPropertyValue","concat","NumberWidget","subtitle","number","color","_ref$progress","progress","value","label","objectWithoutProperties","react_default","Card","body","CardText","CardTitle","Progress","IconWidget","bgColor","Icon","icon","iconProps","Onclick","OnMouseOver","OnMouseOut","defineProperty","onClick","onMouseOver","onMouseOut","inverse","CardBody","size","CardSubtitle","Widget_IconWidget","Weather_URI","Weather_KEY","WeatherWidget","info","react__WEBPACK_IMPORTED_MODULE_2___default","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","temp","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","_","range","padding","map","page","key","cursor","CovidRateCnt","_useState","useState","_useState2","slicedToArray","Load","setLoad","nowddd","moment","format","nowHH","sysToday","arr","subtract","data","split","CountryName","CountryIso","_useState3","_useState4","percentByPeople","setpercentByPeople","tmp","useEffect","scrollTo","load","asyncToGenerator","regenerator_default","mark","_callee","res","popltnCnt","result","today","resT","todayDefcnt","wrap","_context","prev","next","Axios","post","sent","popltn_cnt","getDay","get","response","items","item","filterNation","genPieData","round","natDefCnt","stop","apply","this","datasets","backgroundColor","labels","nation","filter","nationNm","indexOf","index","Col","xl","lg","md","CardHeader","es","TravelAlarmData2","Alarm","setAlarm","SpAlarm","setSpAlarm","_useState5","_useState6","TravelAlarm","setTravelAlarm","_useState7","_useState8","Nation","NationInfo","then","alarm_lvl","splimit","splimitPartial","spbanYan","spbanYnPartial","prevState","toConsumableArray","countryNm","country_nm","countryEnNm","country_eng_nm","ISO","country_iso_alp2","level","note","remark","sp","countryName","countryEnName","isoCode","splimitNote","spbanYna","spbanNote","name","Widget","MdReport","FavoritePage","userId","localStorage","getItem","Favorites","setFavorites","Count","setCount","CP","setCP","Comp","setComp","_useState9","Set","_useState10","checkedItems","setCheckedItems","_useState11","_useState12","submitItem","setsubmitItem","_useState13","_useState14","_useState15","_useState16","submitItemW","setsubmitItemW","_useState17","_useState18","WeatherInfo","setWeatherInfo","_useState19","_useState20","Content","setContent","_useState21","_useState22","cnt","setcnt","WeatherIcon","01n","WiSolarEclipse","02n","WiDayCloudy","03n","WiCloud","04n","WiCloudy","09n","WiShowers","10n","WiRain","11n","WiDayLightning","13n","WiSnow","50n","WiFog","01d","02d","03d","04d","09d","10d","11d","13d","50d","getFavored","userFrom","success","favorites","alert","handleSubmit","event","tmp2","_iterator","_step","i","words","preventDefault","_createForOfIteratorHelper","s","done","err","f","_x","enName","endpointInfo2","main","humidity","weather","wind","speed","cloud","clouds","all","getWeatherInfo","_step2","_iterator2","resultMsg","txt_origin_cn","pagedFavorites","pageNumber","startIndex","slice","take","paginate","active","Row","Table","hover","nationKrNm","nationIso2","scope","nationEnNm","Link","to","pathname","onChange","_ref2","target","id","isChecked","checked","add","has","delete","checkHandler","utils_Pagination","objectSpread","CardFooter","span","offset","Button","chart_CovidRateCnt","precleaning_TravelAlarmData2","whiteSpace"],"mappings":"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","file":"static/js/6.6efecc84.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  description,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n          title\n        )}\n      </div>\n      <Typography type=\"h1\" className={bem.e('description')}>\n           {description}\n      </Typography>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    }),\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <div style={{height:\"70h\",display:\"flex\", justifyContent:\"center\"}}>\n     <div className=\"spinner-grow text-warning\" role=\"status\">\n        <span className=\"visually-hidden\"></span>\n     </div>\n     <div className=\"spinner-grow text-warning\" role=\"status\">\n        <span className=\"visually-hidden\"></span>\n     </div>\n     <div className=\"spinner-grow text-warning\" role=\"status\">\n        <span className=\"visually-hidden\"></span>\n     </div>\n    </div>\n    );\n};\n \nexport default Loading;","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardText, CardTitle, Progress } from 'reactstrap';\nimport Typography from '../Typography';\n\nconst NumberWidget = ({\n  title,\n  subtitle,\n  number,\n  color,\n  progress: { value, label },\n  ...restProps\n}) => {\n  return (\n    <Card body {...restProps}>\n      <div className=\"d-flex justify-content-between\">\n        <CardText tag=\"div\">\n          <Typography className=\"mb-0\">\n            <strong>{title}</strong>\n          </Typography>\n          <Typography className=\"mb-0 text-muted small\">{subtitle}</Typography>\n        </CardText>\n        <CardTitle className={`text-${color}`}>{number}</CardTitle>\n      </div>\n      <Progress value={value} color={color} style={{ height: '8px' }} />\n      <CardText tag=\"div\" className=\"d-flex justify-content-between\">\n        <Typography tag=\"span\" className=\"text-left text-muted small\">\n          {label}\n        </Typography>\n        <Typography tag=\"span\" className=\"text-right text-muted small\">\n          {value}%\n        </Typography>\n      </CardText>\n    </Card>\n  );\n};\n\nNumberWidget.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  number: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]),\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'light',\n    'dark',\n  ]),\n  progress: PropTypes.shape({\n    value: PropTypes.number,\n    label: PropTypes.string,\n  }),\n};\n\nNumberWidget.defaultProps = {\n  title: '',\n  subtitle: '',\n  number: 0,\n  color: 'primary',\n  progress: {\n    value: 0,\n    label: '',\n  },\n};\n\nexport default NumberWidget;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\n\nconst IconWidget = ({\n  bgColor,\n  icon: Icon,\n  iconProps,\n  title,\n  subtitle,\n  className,\n  Onclick,\n  OnMouseOver,\n  OnMouseOut,\n  ...restProps\n}) => {\n  const classes = classNames('cr-widget', className, {\n    [`bg-${bgColor}`]: bgColor,\n  });\n  return (\n    <div onClick={Onclick} onMouseOver={OnMouseOver} onMouseOut={OnMouseOut}>\n    <Card inverse className={classes} {...restProps} >\n      <CardBody className=\"cr-widget__icon\">\n        <Icon size={50} {...iconProps} />\n      </CardBody>\n      <CardBody>\n        <CardTitle>{title}</CardTitle>\n        <CardSubtitle>{subtitle}</CardSubtitle>\n      </CardBody>\n    </Card>\n    </div>\n  );\n};\n\nIconWidget.propTypes = {\n  bgColor: PropTypes.string,\n  icon: PropTypes.component,\n  iconProps: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  Onclick: PropTypes.func,\n  OnMouseOver: PropTypes.func,\n  OnMouseOut: PropTypes.func,\n};\n\nIconWidget.defaultProps = {\n  bgColor: 'primary',\n  icon: 'span',\n  iconProps: { size: 50 },\n};\n\nexport default IconWidget;\n","export { default as NumberWidget } from './NumberWidget';\nexport { default as IconWidget } from './IconWidget';\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n\nexport const API_ENCODED_KEY =\n  'r1%2FX7uK7cJ0DtLUvgK%2F9c95mWzoTl6toUTh7YKCij2%2BGRd8OaBD%2FjNqTcjoxP8uJTshSyggHh4ZIBjXCk1qGYA%3D%3D';\n\nexport const API_DECODED_KEY =\n  'r1/X7uK7cJ0DtLUvgK/9c95mWzoTl6toUTh7YKCij2+GRd8OaBD/jNqTcjoxP8uJTshSyggHh4ZIBjXCk1qGYA==';\n\nexport const SafetyNews_URL =\n  'http://apis.data.go.kr/1262000/CountryCovid19SafetyServiceNew/getCountrySafetyNewsListNew'; // 국가 지역별 최신안전소식(코로나관련)\n\nexport const ArrivalsService_URL =\n  'http://apis.data.go.kr/1262000/CountryOverseasArrivalsService/getCountryOverseasArrivalsList'; // 국가별 해외입국자 조치현황\n\nexport const EntranceVisaService_URL =\n  'http://apis.data.go.kr/1262000/EntranceVisaService2/getEntranceVisaList2'; // 국가·지역별 입국허가요건\n\nexport const KoreaDepartureService_URL =\n  'http://apis.data.go.kr/1262000/CountryKoreaDepartureService/getCountryKoreaDepartureList'; // 국가별 한국발 입국자 조치\n\nexport const getCovid19NatInfStateJson_URL =\n  'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19NatInfStateJson'; // 보건복지부 코로나19해외발생 현황\n\nexport const getCovid19InfStateJson_URL =\n  'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson'; // 보건복지부 코로나19 감염현황\n\nexport const getTravelAlarm_URL =\n  'http://apis.data.go.kr/1262000/TravelAlarmService2/getTravelAlarmList2'; // 국가∙지역별 여행경보\n\nexport const TravelWarning_URL =\n  'http://apis.data.go.kr/1262000/TravelWarningService/getTravelWarningList'; // 여행경보제도 xml\n\nexport const TravelWarningInfo_URL =\n  'http://apis.data.go.kr/1262000/TravelWarningService/getTravelWarningInfo'; // 여행경보제도 단일 xml\n\nexport const SptravelWarningService_URL =\n  'http://apis.data.go.kr/1262000/SptravelWarningService2/getSptravelWarningList2'; // 국가∙지역별 특별여행주의보\n\nexport const Weather_URI = 'http://api.openweathermap.org/data/2.5/weather';\n// \"http://api.openweathermap.org/data/2.5/weather?q=seoul&appid=655cbe1696da4bc5a0225adc19cc4179\n\nexport const Weather_KEY = '655cbe1696da4bc5a0225adc19cc4179';\n\nexport const TravelSpecialWarningService_URL =\n  'http://apis.data.go.kr/1262000/TravelSpecialWarningService/getTravelSpecialWarningList'; //특별여행경보\n\nexport const chanbi_key =\n  'V19PpK7VUIMrF9WqDKk%2BgZRET7zWU34lPAAJyIEe96VmWDu%2FhGu9B%2Bcon3Dn%2FP4Oj74lzzyuV7aqEBKvc5xRkw%3D%3D';\n\nexport const friend_key =\n  'SgEk8mUduv4ezkK8AO822hSARBK0YI3i4p0CCsVOU4k0dMJ7IS6qMCO8gYqIr%2BqD82RelttqPqESYRZKZbZFbQ%3D%3D';\n\nexport const yeongin_key =\n  'qUnQJ2qjsQ38NOd3FvjN4BKHgEzg5tZwfb0%2BWThnkETsqkGcAgCKXg3rPwQoohdGMR4vSQ8CaHmxQNomvSVrbQ%3D%3D';\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\n\nconst WeatherWidget = ({\n  bgColor,\n  icon: Icon,\n  iconProps,\n  info,\n  className,\n  ...restProps\n}) => {\n  const classes = classNames('cr-widget', className, {\n    [`bg-${bgColor}`]: bgColor,\n  });\n  return (\n    <Card inverse className={classes} {...restProps}>\n      <CardBody className=\"cr-widget__icon\">\n        <Icon size={50} {...iconProps} />\n      </CardBody>\n      <CardBody>\n        <CardTitle>오늘 날씨</CardTitle>\n        <CardSubtitle>{info.temp}도 {info.description}</CardSubtitle>\n      </CardBody>\n    </Card>\n  );\n};\n\nWeatherWidget.propTypes = {\n  bgColor: PropTypes.string,\n  icon: PropTypes.component,\n  iconProps: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nWeatherWidget.defaultProps = {\n  bgColor: 'primary',\n  icon: 'span',\n  iconProps: { size: 50 },\n};\n\nexport default WeatherWidget;\n","import React from 'react';\nimport _ from 'lodash';\n\nconst Pagination = props => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props; // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\n\n  const pageCount = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산\n  if (pageCount === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여주지 않음\n\n  const pages = _.range(1, pageCount + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\n\n  return (\n    <nav>\n      {' '}\n      {/* VSCode 입력: nav>ul.pagination>li.page-item>a.page-link */}\n      <ul className=\"pagination\" style={{ padding: '2rem' }}>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? 'page-item active' : 'page-item'} // Bootstrap을 이용하여 현재 페이지를 시각적으로 표시\n            style={{ cursor: 'pointer' }}\n          >\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>{' '}\n            {/* 페이지 번호 클릭 이벤트 처리기 지정 */}\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport moment from 'moment';\nimport Loading from '../map/Loading';\nimport { Row, Col, Card, CardBody, CardHeader } from 'reactstrap';\nimport { getColor } from 'utils/colors';\nimport Page from 'components/Page';\nimport { Doughnut } from 'react-chartjs-2';\n\nfunction CovidRateCnt(props) {\n  const [Load, setLoad] = useState(true);\n\n  let nowddd = moment().format('ddd');\n  let nowHH = moment().format('HH');\n  let sysToday = moment().format('YYYYMMDD');\n  let sysYesterday = moment().subtract(1, 'days').format('YYYYMMDD');\n  let arr = props.data.split(' ');\n  let CountryName = arr[0];\n  let CountryIso = arr[1];\n\n  const [percentByPeople, setpercentByPeople] = useState(0);\n\n  let tmp = {\n    CountryName,\n    CountryIso,\n  };\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    load();\n  }, []);\n  const load = async () => {\n    let res = await Axios.post(`/api/info/getCountryPopulation`, tmp);\n    let popltnCnt = res.data.data.body.data[0].popltn_cnt;\n    const result = getDay();\n    const today = result;\n\n    let resT = await Axios.get(`api/info/TodayCovid19Nat/${today}`);\n    let todayDefcnt = resT.data.data.body.response.body.items.item;\n\n    todayDefcnt = filterNation(CountryName, todayDefcnt);\n    setpercentByPeople(\n      genPieData(Math.round((todayDefcnt.natDefCnt / popltnCnt) * 10000) / 100),\n    );\n    setLoad(false);\n  };\n\n  const genPieData = p => {\n    return {\n      datasets: [\n        {\n          data: [p, 100 - p],\n          backgroundColor: [getColor('primary'), getColor('lightgray')],\n          label: 'Dataset 1',\n        },\n      ],\n      labels: ['인구대비 누적 확진자 비율'],\n    };\n  };\n\n  const getDay = () => {\n    let t = '';\n    if (nowddd == 'Sun') {\n      t = moment(sysToday).subtract(1, 'days').format('YYYYMMDD');\n    } else if (nowddd == 'Mon') {\n      t = moment(sysToday).subtract(2, 'days').format('YYYYMMDD');\n    } else if (nowddd == 'Tue' && nowHH < 12) {\n      t = moment(sysToday).subtract(3, 'days').format('YYYYMMDD');\n    } else if (nowddd == 'Tue' && nowHH >= 12) {\n      t = sysToday;\n    } else if (nowddd == 'Wed' && nowHH < 12) {\n      t = moment(sysToday).subtract(1, 'days').format('YYYYMMDD');\n    } else if (nowHH < 12) {\n      t = moment(sysToday).subtract(1, 'days').format('YYYYMMDD');\n    } else {\n      t = sysToday;\n    }\n    return t;\n  };\n\n  const filterNation = (nation, arr) => {\n    let result = {};\n    arr\n      .filter(item => item.nationNm.indexOf(nation) != -1)\n      .map((item, index) => {\n        if (nation === item.nationNm) {\n          result = item;\n        }\n      });\n    return result;\n  };\n\n  return (\n    <Col xl={6} lg={12} md={12}>\n      <Card>\n        <CardHeader>{CountryName}</CardHeader>\n        <CardBody>\n          {Load === true ? <Loading /> : <Doughnut data={percentByPeople} />}\n        </CardBody>\n      </Card>\n    </Col>\n  );\n}\n\nexport default CovidRateCnt;\n","import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { IconWidget } from '../Widget';\nimport { MdReport } from 'react-icons/md';\nimport { Col } from 'reactstrap';\n\nexport const TravelAlarmData2 = props => {\n  const [Alarm, setAlarm] = useState([]);\n  const [SpAlarm, setSpAlarm] = useState([]);\n  const [TravelAlarm, setTravelAlarm] = useState([]);\n  const [Nation, setNation] = useState(props.nation);\n\n  let NationInfo = {};\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    Axios.get(`/api/info/TravelAlarm`).then(res => {\n      setAlarm(res.data.data.body.data.filter(item => item.alarm_lvl != null));\n    });\n    Axios.get(`/api/info/SpecialWarning`).then(res => {\n      setSpAlarm(\n        res.data.data.body.response.body.items.item.filter(\n          item =>\n            !item.splimit ||\n            !item.splimitPartial ||\n            !item.spbanYan ||\n            !item.spbanYnPartial,\n        ),\n      );\n    });\n  }, []);\n\n  const load = () => {};\n  useEffect(() => {\n    Alarm.map(item => {\n      setTravelAlarm(prevState => [\n        ...prevState,\n        {\n          countryNm: item.country_nm,\n          countryEnNm: item.country_eng_nm,\n          ISO: item.country_iso_alp2,\n          level: item.alarm_lvl + '단계',\n          note: item.remark,\n        },\n      ]);\n    });\n  }, [Alarm]);\n\n  useEffect(() => {\n    SpAlarm.filter(sp => sp.splimit !== undefined).map(item => {\n      setTravelAlarm(prevState => [\n        ...prevState,\n        {\n          countryNm: item.countryName,\n          countryEnNm: item.countryEnName,\n          ISO: item.isoCode,\n          level: item.splimit,\n          note: item.splimitNote,\n        },\n      ]);\n    });\n    SpAlarm.filter(sp => sp.splimitPartial !== undefined).map(item => {\n      setTravelAlarm(prevState => [\n        ...prevState,\n        {\n          countryNm: item.countryName,\n          countryEnNm: item.countryEnName,\n          ISO: item.isoCode,\n          level: item.splimitPartial,\n          note: item.splimitNote,\n        },\n      ]);\n    });\n    SpAlarm.filter(sp => sp.spbanYna !== undefined).map(item => {\n      setTravelAlarm(prevState => [\n        ...prevState,\n        {\n          countryNm: item.countryName,\n          countryEnNm: item.countryEnName,\n          ISO: item.isoCode,\n          level: item.spbanYna,\n          note: item.spbanNote,\n        },\n      ]);\n    });\n    SpAlarm.filter(sp => sp.spbanYnPartial !== undefined).map(item => {\n      setTravelAlarm(prevState => [\n        ...prevState,\n        {\n          countryNm: item.countryName,\n          countryEnNm: item.countryEnName,\n          ISO: item.isoCode,\n          level: item.spbanYnPartial,\n          note: item.spbanNote,\n        },\n      ]);\n    });\n  }, [SpAlarm]);\n\n  const filterNation = name => {\n    TravelAlarm.filter(item => item.countryNm.indexOf(name) !== -1).map(\n      data => {\n        if (name === data.countryNm) {\n          NationInfo = {\n            level: data.level,\n            note: data.note,\n          };\n        }\n      },\n    );\n  };\n  if (TravelAlarm.length === 237) {\n    filterNation(Nation);\n  }\n\n  return (\n    <Col xl={6} lg={12} md={12} className=\"mb-3\">\n      <IconWidget\n        bgColor={'pink'}\n        icon={MdReport}\n        title=\"특별여행 경보단계\"\n        subtitle={NationInfo.level}\n      />\n    </Col>\n  );\n};\n\nexport default TravelAlarmData2;\n","import Page from 'components/Page';\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  Col,\n  Row,\n  Table,\n  Button,\n  FormGroup,\n  CardHeader,\n} from 'reactstrap';\nimport Pagination from '../../utils/Pagination';\nimport { paginate } from '../../utils/paginate';\n\nimport CovidRateCnt from '../chart/CovidRateCnt';\nimport TravleAlarmData2 from '../precleaning/TravelAlarmData2';\n\nimport { Weather_URI, Weather_KEY } from '../Config';\nimport WeatherWidget from '../Widget/WeatherWidget';\nimport {\n  WiSolarEclipse,\n  WiDayCloudy,\n  WiCloud,\n  WiCloudy,\n  WiShowers,\n  WiRain,\n  WiDayLightning,\n  WiSnow,\n  WiFog,\n} from 'weather-icons-react'; \n\nfunction FavoritePage(props) {\n  const userId = localStorage.getItem('userId');\n  const [Favorites, setFavorites] = useState([]);\n  const [Count, setCount] = useState(0);\n  const [CP, setCP] = useState(1);\n  const [Comp, setComp] = useState(false);\n  const [checkedItems, setCheckedItems] = useState(new Set());\n  const [submitItem, setsubmitItem] = useState([]);\n  const [checkedItemsE, setCheckedItemsE] = useState(new Set());\n  const [submitItemW, setsubmitItemW] = useState([]);\n  const [WeatherInfo, setWeatherInfo] = useState([]);\n  const [Content, setContent] = useState([]);\n\n  const [cnt, setcnt] = useState(0);\n  const WeatherIcon = {\n    '01n': WiSolarEclipse,\n    '02n': WiDayCloudy,\n    '03n': WiCloud,\n    '04n': WiCloudy,\n    '09n': WiShowers,\n    '10n': WiRain,\n    '11n': WiDayLightning,\n    '13n': WiSnow,\n    '50n': WiFog,\n    '01d': WiSolarEclipse,\n    '02d': WiDayCloudy,\n    '03d': WiCloud,\n    '04d': WiCloudy,\n    '09d': WiShowers,\n    '10d': WiRain,\n    '11d': WiDayLightning,\n    '13d': WiSnow,\n    '50d': WiFog,\n  };\n\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    getFavored();\n  }, []);\n\n  const getFavored = () => {\n    Axios.post(`/api/favorite/getFavored`, { userFrom: userId }).then(res => {\n      if (res.data.success) {\n        setFavorites({\n          data: res.data.favorites,\n          pageSize: 5,\n          currentPage: CP,\n        });\n        setCount(res.data.favorites.length);\n      } else {\n        alert('데이터를 가져오는데 실패했습니다.');\n      }\n    });\n  };\n\n  const handlePageChange = page => {\n    setCP(page);\n    setFavorites({ ...Favorites, currentPage: page });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    let tmp = [];\n    let tmp2 =[];\n    for (let i of checkedItems) {\n      let words = i.split(',');\n      tmp = [...tmp, words[0]];\n      tmp2 = [...tmp2, words[1]];\n    }\n    await setContent([]);\n    await setWeatherInfo([]);\n    await setsubmitItem(tmp);\n    await setsubmitItemW(tmp2);\n    setComp(false);\n    setComp(true);\n  };\n\n  const checkHandler = ({ target }) => {\n    let id = target.value;\n    let isChecked = target.checked;\n    if (isChecked && cnt < 2) {\n      checkedItems.add(id);\n      setCheckedItems(checkedItems);\n      setcnt(cnt + 1);\n    } else if (!isChecked && checkedItems.has(id)) {\n      checkedItems.delete(id);\n      setCheckedItems(checkedItems);\n      setcnt(cnt - 1);\n    } else {\n      target.checked = false;\n    }\n  };\n\n  const getWeatherInfo = (item) => {\n    let enName = item;\n    if (item=== 'Hong Kong S.A.R.') {\n      enName = 'HongKong';\n    }\n    let endpointInfo2 = `${Weather_URI}?q=${enName}&appid=${Weather_KEY}`;\n    Axios.get(endpointInfo2).then(res => {\n      let tmp = {\n        temp: Math.round(res.data.main.temp - 273.15),\n        humidity: res.data.main.humidity,\n        weather: res.data.weather[0].main,\n        description: res.data.weather[0].description,\n        icon: WeatherIcon[res.data.weather[0].icon],\n        wind: res.data.wind.speed,\n        cloud: res.data.clouds.all + '%',\n      };\n      setWeatherInfo((prevState) => [...prevState, tmp]);\n      if(WeatherInfo.length==2){\n        let tmp2 = submitItem[1].split(' ');\n        if(tmp2[0]!=enName){\n          let n = WeatherInfo[0];\n          WeatherInfo[0]=WeatherInfo[1];\n          WeatherInfo[1]=n;\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    submitItemW.map(item => {\n      getWeatherInfo(item);\n    })\n  },[submitItemW]);\n\n  useEffect(() => {\n    let tmp = [];\n    for (let i of submitItem) {\n      let words = i.split(' ');\n      tmp = [...tmp, {CountryName:words[0],CountryIso:words[1]}];\n    }\n    tmp.map((item)=>{\n      Axios.post(`/api/info/ArrivalsService`, item).then(res => {\n        if (res.data.success) {\n          if (res.data.data.body.resultMsg == '정상') {\n            if (res.data.data.body.data.length == 0) {\n              setContent((prevState)=>[...prevState, '정보가 없습니다.']);\n            } else {\n              res.data.data.body.data.map(item => {\n                setContent((prevState)=>[...prevState, item.txt_origin_cn]);\n                if(Content.length==2){\n                  let tmp2 = submitItem[0].split(' ');\n                  if(tmp2[0]!=Content[0].CountryName){\n                    let n = Content[0];\n                    Content[0]=Content[1];\n                    Content[1]=n;\n                  }\n                }\n              });\n            }\n          }\n        }\n      });\n    })\n  },[submitItem]);\n\n  const { data, pageSize, currentPage } = Favorites;\n  const pagedFavorites = paginate(data, currentPage, pageSize);\n\n  if (Count === 0) {\n    return (\n      <Page\n        title=\"Favorite\"\n        breadcrumbs={[{ name: 'favorite', active: true }]}\n        className=\"TablePage\"\n      >\n        저장한 정보가 없습니다.\n      </Page>\n    );\n  } else {\n    return (\n      <Page\n        title=\"Favorite\"\n        description=\"찜한 국가의 여행정보를 쉽게 확인할 수 있는 검색 기능과 국가 간 비교 기능을 제공합니다.\"\n        breadcrumbs={[{ name: 'favorite', active: true }]}\n        className=\"TablePage\"\n      >\n        <Row>\n          <Col>\n            <Card className=\"mb-3\">\n              <CardBody>\n                <Table hover>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>국가명</th>\n                      <th>국가명(영문)</th>\n                      <th>국가코드</th>\n                      <th>검색버튼</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {pagedFavorites.map((data, index) => {\n                      let tmp = {\n                        name: data.nationKrNm,\n                        iso: data.nationIso2,\n                      };\n                      return (\n                        <tr\n                          key={index}\n                        >\n                          <th scope=\"row\">{index + 1}</th>\n                          <td>{data.nationKrNm}</td>\n                          <td>{data.nationEnNm}</td>\n                          <td>{data.nationIso2}</td>\n                          <td>\n                            <Link\n                              to={{\n                                pathname: '/search',\n                                name: `${data.nationKrNm}`,\n                              }}\n                            >\n                              search\n                            </Link>\n                          </td>\n                          <td>\n                            <input\n                              type=\"checkbox\"\n                              value={data.nationKrNm + ' ' + data.nationIso2 + ',' + data.nationEnNm}\n                              onChange={e => checkHandler(e)}\n                            />\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n                <Pagination\n                  pageSize={pageSize}\n                  itemsCount={Count}\n                  currentPage={currentPage}\n                  onPageChange={handlePageChange}\n                />\n              </CardBody>\n              <CardFooter>\n                <Row>\n                  <Col md={{ span: 6, offset: 3 }}>\n                      <small className=\"text-muted\">\n                      비교하고 싶은 두 국가를 선택하여, 출입국 현황과 확진자 비율을 차트로 확인해 보세요.&nbsp;&nbsp;\n                      </small>\n                      <Button color=\"primary\" onClick={handleSubmit}>\n                        비교하기\n                      </Button>\n                  </Col>\n                </Row>\n              </CardFooter>\n\n            </Card>\n          </Col>\n        </Row>\n        {/* 도넛차트 - 확진자 비율 */}\n        {Comp && (\n          <Row>\n            {submitItem.map(item => {\n              return <CovidRateCnt data={item} />;\n            })}\n          </Row>\n        )}\n        {/* 여행 경보 단계 */}\n        {Comp && (\n          <Row>\n            {submitItem.map(item => {\n              let tmp = item.split(' ');\n              return <TravleAlarmData2 nation={tmp[0]} />;\n            })}\n          </Row>\n        )}\n        {/* 날씨 위젯 */}\n        {Comp && (\n          <Row>\n            {WeatherInfo.map(item => {\n              return(\n              <Col xl={6} lg={12} md={12} className=\"mb-3\">\n              <WeatherWidget\n                bgColor={'pink'}\n                icon={item.icon}\n                info={item}\n              />\n            </Col>);\n            })}\n          </Row>\n        )}\n        {Comp && (\n          <Row>\n            {Content.map(item=>{\n              return(\n                <Col>\n                <Card className=\"mb-3\" style={{ whiteSpace: 'pre-wrap' }}>\n                  <CardHeader tag=\"h5\">각국의 해외 입국자에 대한 조치 현황 </CardHeader>\n                  <CardBody>{item}</CardBody>\n                </Card>\n              </Col>\n              );\n            })}\n        </Row>\n        )}\n      </Page>\n    );\n  }\n}\n\nexport default FavoritePage;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize; // 자를 배열의 시작점\n\n  return _(items)\n    .slice(startIndex) // 시작점부터 배열을 자르되\n    .take(pageSize) // pageSize만큼의 배열을 취함\n    .value(); // lodash wrapper 객체를 regular 배열로 변환\n}\n\n//ex\n//13개를 4개씩 보여주는 페이지\n//0123-4567-891011-1213\n//  1   2     3     4   페이지 번호\n//0    4     8    12     startIndex\n"],"sourceRoot":""}